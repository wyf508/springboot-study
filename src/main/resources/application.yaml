# servlet:
#    工程名
#    context-path: /gg
#测试获取元数据
# 开启debug模式
#debug: true
person:
  firstName: www
  lastName: fang
  age: ${random.int(30)}
  boos: false
  email: 88888888@qq.com
  birth: 2011/2/8
  list: [dog, cat, horse]
  maps: {key1: 55555, key2: ssss}
  dog:
    name: 旺财
    age: ${person.age}

#多profiles环境下的配置（加载同一个配置文件下的对应配置块，或者找到application-dev.properties）
spring:
  profiles:
    active: dev

---
server:
  port: 8080
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
    username: test
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    #   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500


mybatis:
  #配置映射别名
  type-aliases-package: com.test.pojo,com.test.bean
  configuration:
    #启用驼峰规则
    map-underscore-to-camel-case: true
  #映射文件位置
  mapper-locations: classpath:mapper/*.xml

#  schema:
#    - classpath:sql/department.sql
#    - classpath:sql/employee.sql

---
server:
  port: 8081
spring:
  profiles: pro